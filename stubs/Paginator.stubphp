<?php

namespace Illuminate\Contracts\Pagination {

use Illuminate\Database\Eloquent\Model;

  /**
   * @template T of Model
   */
  interface Paginator
  {
      /**
       * Get all of the items being paginated.
       *
       * @return array<T>
       */
      public function items();
  }

  /**
   * @template T of Model
   * @extends Paginator<T>
   */
  interface LengthAwarePaginator extends Paginator {}
}

namespace Illuminate\Pagination {

use ArrayAccess;
use Countable;
use Illuminate\Contracts\Pagination\LengthAwarePaginator as LengthAwarePaginatorContract;
use Illuminate\Contracts\Support\Arrayable;
use Illuminate\Contracts\Support\Jsonable;
use Illuminate\Support\Collection;
use IteratorAggregate;
use JsonSerializable;

  /**
   * @template T
   *
   * @template-implements ArrayAccess<array-key, T>
   * @template-implements Arrayable<T>
   * @template-implements IteratorAggregate<array-key,T>
   * @template-implements LengthAwarePaginatorContract<T>
   */
  class LengthAwarePaginator implements Arrayable, ArrayAccess, Countable, IteratorAggregate, Jsonable, JsonSerializable, LengthAwarePaginatorContract
  {
        /**
         * @return array<T>
         */
        public function items() {}
  }
}